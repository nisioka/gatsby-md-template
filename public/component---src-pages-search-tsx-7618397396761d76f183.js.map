{"version":3,"file":"component---src-pages-search-tsx-7618397396761d76f183.js","mappings":"qMA2GA,UAnGeA,IAA2D,IAA1D,KAAEC,EAAI,SAAEC,GAA6CF,EACnE,MAAMG,GAAQC,EAAAA,EAAAA,IAAWH,EAAKI,kBAAmBJ,EAAKK,UAAWL,EAAKM,UAEhE,EAACC,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,aAAc,GACdC,MAAO,KAoCT,MAAM,aAAED,EAAY,MAAEC,GAAUJ,EAEhC,OACEK,EAAAA,cAACC,EAAAA,EAAM,CAACZ,SAAUA,GAChBW,EAAAA,cAAA,SACEE,KAAK,OACL,aAAW,SACXC,YAAY,cACZC,SA5BN,SAA2BC,GACzB,MAAMC,EAAaD,EAAME,OAAOC,MAAMC,cAAcC,MAAM,OAEpDZ,EAAeR,EAAMqB,QAAOC,IAChC,IAAK,MAAMC,KAAQP,EAAY,KAAAQ,EAC7B,KACGF,EAAKG,MAAMN,cAAcO,SAASH,IAClB,QAAjBC,EAACF,EAAKK,mBAAW,IAAAH,GAAhBA,EAAkBL,cAAcO,SAASH,IAE1C,OAAO,CAEX,CACA,OAAO,CAAI,IAEbjB,EAAS,CACPE,eACAC,MAAOO,EAAWY,KAAK,MAE3B,IAYIlB,EAAAA,cAAA,OAAKmB,UAAU,qBACF,KAAVpB,EACGA,EAAQ,WAAaD,EAAasB,OAAS,IAC3CtB,EAAasB,OAAS,aAE5BpB,EAAAA,cAACqB,EAAAA,GAAkB,KACjBrB,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SAAIF,EAAasB,OAAO,YAE1BpB,EAAAA,cAACsB,EAAAA,GAA0B,KACxBxB,EAAayB,KAAIX,GAEdZ,EAAAA,cAAA,MAAIwB,IAAKZ,EAAKa,MACZzB,EAAAA,cAAA,WACEmB,UAAU,iBACVO,SAAS,6BAET1B,EAAAA,cAAC2B,EAAAA,KAAI,CAACC,GAAI,KAAIC,EAAAA,EAAAA,IAAgBjB,EAAKkB,aAAalB,EAAKa,QACnDzB,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAOY,EAAKG,QAEdf,EAAAA,cAAA,eACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,YAAOY,EAAKmB,QAGhB/B,EAAAA,cAAA,OAAKmB,UAAU,kBACgB,IAArBP,EAAKoB,aACXhC,EAAAA,cAACiC,EAAAA,EAAW,CACVC,IAAKtB,EAAKuB,QACVC,MAAOxB,EAAKoB,YACZb,UAAU,eAIhBnB,EAAAA,cAAA,KAAGqC,wBAAyB,CAAEC,OAAQ1B,EAAK2B,kBAQlD,C,8FCrGN,MAAMlB,EAAqBmB,EAAAA,GAAOC,MAAM;;;;;;;;;;;;;;EAgBlCnB,EAA6BkB,EAAAA,GAAOE,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyDlBF,EAAAA,GAAOG,GAAG","sources":["webpack://gatsby-starter-blog/./src/pages/search.tsx","webpack://gatsby-starter-blog/./src/style.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { convertCategory, mergePosts } from \"../utilFunction\"\n// import { useNavigate } from 'react-router-dom';\nimport { ContentsListHeader, ContentsOrderedListWrapper } from \"../style\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Search = ({ data, location }: { data: any; location: Location }) => {\n  const posts = mergePosts(data.allMarkdownRemark, data.allWpPost, data.allFile)\n\n  const [state, setState] = useState({\n    filteredData: [] as CommonPost[],\n    query: \"\",\n  })\n  // const [urlParam, setUrlParam] = useState('');\n  // const navigate = useNavigate();\n  //\n  // useEffect(() => {\n  //   // ユーザーの入力があるたびにURLのクエリパラメータを更新\n  //   const params = new URLSearchParams();\n  //   if (query) {\n  //     params.append('q', query);\n  //   } else {\n  //     params.delete('q');\n  //   }\n  //   navigate(`?${params.toString()}`, { replace: true });\n  // }, [urlParam, navigate]);\n\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const queryWords = event.target.value.toLowerCase().split(/\\s+/)\n\n    const filteredData = posts.filter(post => {\n      for (const word of queryWords) {\n        if (\n          !post.title.toLowerCase().includes(word) &&\n          !post.description?.toLowerCase().includes(word)\n        ) {\n          return false\n        }\n      }\n      return true\n    })\n    setState({\n      filteredData,\n      query: queryWords.join(\" \"),\n    })\n  }\n\n  const { filteredData, query } = state\n\n  return (\n    <Layout location={location}>\n      <input\n        type=\"text\"\n        aria-label=\"Search\"\n        placeholder=\"検索ワードを入力...\"\n        onChange={handleInputChange}\n      />\n      <div className=\"result-inner__res\">\n        {query !== \"\"\n          ? query + \" の検索結果: \" + filteredData.length + \"件\"\n          : filteredData.length + \"件の記事があります\"}\n      </div>\n      <ContentsListHeader>\n        <h1>サイト内検索</h1>\n        <p>{filteredData.length} 記事あります</p>\n      </ContentsListHeader>\n      <ContentsOrderedListWrapper>\n        {filteredData.map(post => {\n          return (\n            <li key={post.slug}>\n              <article\n                className=\"post-list-item\"\n                itemType=\"http://schema.org/Article\"\n              >\n                <Link to={`/${convertCategory(post.category)}/${post.slug}`}>\n                  <h2>\n                    <span>{post.title}</span>\n                  </h2>\n                  <section>\n                    <div>\n                      <small>\n                        <time>{post.date}</time>\n                      </small>\n                    </div>\n                    <div className=\"thumbnail\">\n                      {typeof post.gatsbyImage === \"undefined\" || (\n                        <GatsbyImage\n                          alt={post.altText}\n                          image={post.gatsbyImage}\n                          className=\"thumbnail\"\n                        />\n                      )}\n                    </div>\n                    <p dangerouslySetInnerHTML={{ __html: post.excerpt }} />\n                  </section>\n                </Link>\n              </article>\n            </li>\n          )\n        })}\n      </ContentsOrderedListWrapper>\n    </Layout>\n  )\n}\n\nexport default Search\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      nodes {\n        html\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"YYYY/MM/DD\")\n          description\n          featuredImagePath\n          category\n        }\n      }\n    }\n    allWpPost {\n      nodes {\n        title\n        content\n        slug\n        date(formatString: \"YYYY/MM/DD\")\n        featuredImage {\n          node {\n            altText\n            gatsbyImage(\n              width: 100\n              height: 100\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n            )\n          }\n        }\n        categories {\n          nodes {\n            name\n          }\n        }\n      }\n    }\n    allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n      edges {\n        node {\n          relativePath\n          childImageSharp {\n            gatsbyImageData(\n              width: 100\n              height: 100\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n            )\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from \"styled-components\"\n\nexport const ContentsListHeader = styled.header`\n  text-align: center;\n\n  h1,\n  h2 {\n    &:after {\n      margin: 0 auto;\n      content: \"\";\n      display: block;\n      width: 98%;\n      height: 3px;\n      background: var(--orange);\n    }\n  }\n`\n\nexport const ContentsOrderedListWrapper = styled.ol`\n  column-count: 1;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  li {\n    padding: 5px;\n    margin: var(--spacing-1);\n    box-sizing: border-box;\n    border: 1px solid var(--black);\n    border-radius: 5px;\n    background-color: #fff;\n\n    a {\n      color: var(--black);\n      text-decoration: none;\n    }\n\n    h2 {\n      font-size: var(--fontSize-2);\n    }\n  }\n  .thumbnail {\n    float: left;\n  }\n\n  @media screen and (min-width: calc(512px + 160px)) {\n    column-count: 2;\n\n    li {\n      padding: 15px;\n      width: 48%;\n\n      h2 {\n        font-size: var(--fontSize-3);\n      }\n\n      a {\n        &:hover h2 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n  @media screen and (min-width: calc(768px + 330px)) {\n    column-count: 3;\n\n    li {\n      width: 32%;\n    }\n  }\n`\n\nexport const NormalAreaWrapper = styled.div`\n  background-color: #fff;\n`\n"],"names":["_ref","data","location","posts","mergePosts","allMarkdownRemark","allWpPost","allFile","state","setState","useState","filteredData","query","React","Layout","type","placeholder","onChange","event","queryWords","target","value","toLowerCase","split","filter","post","word","_post$description","title","includes","description","join","className","length","ContentsListHeader","ContentsOrderedListWrapper","map","key","slug","itemType","Link","to","convertCategory","category","date","gatsbyImage","GatsbyImage","alt","altText","image","dangerouslySetInnerHTML","__html","excerpt","styled","header","ol","div"],"sourceRoot":""}